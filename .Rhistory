xlab = "Pause between Events",
main = "Extinction rate depending on frequency")
# Ensure data_table_Pop is a data frame
data_table_Pop <- as.data.frame(data_table_Pop)
# Set column names
colnames(data_table_Pop) <- c("f", "Final_Pop", "final_gen")
# Initialize a vector to store extinction ratios for each frequency
extinction_ratios <- numeric(length(frequencies))
# Calculate extinction ratios for each frequency
for (t_pause in frequencies) {
# Filter data for the current frequency
current_data <- subset(data_table_Pop, f == t_pause)
# Count how many populations went extinct (Final Pop == 0)
extinct_count <- sum(current_data$Final_Pop == 0)
# Calculate the extinction ratio (Number of extinct populations / number of replicates)
extinction_ratios[t_pause] <- extinct_count / no_replicates
}
# Create a data frame for extinction ratios
extinction_df <- data.frame(
t_pause = frequencies,
extinction_ratio = extinction_ratios
)
# Print or view the extinction ratios
print(extinction_df)
plot(extinction_df[,1], extinction_df[,2],
type = "b",
pch = 16,
col = "#CC79A7",
ylab = "Extinction Probability",
xlab = "Pause between Events",
main = "Extinction rate depending on frequency")
legend("topright", legend = "Total Population"),
# Ensure data_table_Pop is a data frame
data_table_Pop <- as.data.frame(data_table_Pop)
# Set column names
colnames(data_table_Pop) <- c("f", "Final_Pop", "final_gen")
# Initialize a vector to store extinction ratios for each frequency
extinction_ratios <- numeric(length(frequencies))
# Calculate extinction ratios for each frequency
for (t_pause in frequencies) {
# Filter data for the current frequency
current_data <- subset(data_table_Pop, f == t_pause)
# Count how many populations went extinct (Final Pop == 0)
extinct_count <- sum(current_data$Final_Pop == 0)
# Calculate the extinction ratio (Number of extinct populations / number of replicates)
extinction_ratios[t_pause] <- extinct_count / no_replicates
}
# Create a data frame for extinction ratios
extinction_df <- data.frame(
t_pause = frequencies,
extinction_ratio = extinction_ratios
)
# Print or view the extinction ratios
print(extinction_df)
plot(extinction_df[,1], extinction_df[,2],
type = "b",
pch = 16,
col = "#CC79A7",
ylab = "Extinction Probability",
xlab = "Pause between Events",
main = "Extinction rate depending on frequency")
legend("topright", legend = "Total Population",
col = "#CC79A7",
pch = 16)
# Ensure ratios are numeric
ratios$t_pause <- as.numeric(as.character(ratios$t_pause))
ratios$Nw_survival_ratio <- as.numeric(as.character(ratios$Nw_survival_ratio))
ratios$Nm_survival_ratio <- as.numeric(as.character(ratios$Nm_survival_ratio))
# Plot for Wildtype survival ratio
plot(ratios$t_pause, ratios$Nw_survival_ratio,
xlab = "Pause between Events",
ylab = "Survival Ratio",
main = c(paste("Survival Ratio of wildtype"), paste("depending on the frequency of events")),
col = "#D55E00",
type = "b",
pch = c(16))  # Use a solid circle for points
# add a legend
legend("bottomright", legend = "Wildtype",
col = "#D55E00",
pch = 16)
#creating two data-tables with frequency and corresponding proportion average of WT and MUT
mean_comp_WT <- aggregate(data_table_comp[,2]~ f, data = data_table_comp, FUN = mean)
mean_comp_Mut <- aggregate(data_table_comp[,3] ~ f, data = data_table_comp, FUN = mean)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
# Combine the two data frames into one
# Ensure the names are consistent for merging
colnames(mean_comp_WT) <- c("f", "Proportion_WT")
colnames(mean_comp_Mut) <- c("f", "Proportion_Mut")
# Merge the data into one data-table
mean_comp <- merge(mean_comp_WT, mean_comp_Mut, by = "f")
# Reshape the data into long format for ggplot2
mean_comp_long <- mean_comp %>%
pivot_longer(cols = c("Proportion_WT", "Proportion_Mut"),
names_to = "Type",
values_to = "Proportion")
# Plot the stacked bar chart
ggplot(mean_comp_long, aes(x = as.factor(f), y = Proportion, fill = Type)) +
geom_bar(stat = "identity", position = "stack") +
labs(x = "Pause between Events", # labeling x- and y-axis
y = "Mean Proportion",
title = "Mean Proportion of Wildtype and Mutant by Event Frequency") +
scale_fill_manual(values = c("Proportion_WT" = "#D55E00", "Proportion_Mut" = "#56B4E9"), # applying correct colors
labels = c("Mutant","Wildtype")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))  # Center the title
# Ensure data_table_Pop is a data frame
data_table_Pop <- as.data.frame(data_table_Pop)
# Set column names
colnames(data_table_Pop) <- c("f", "Final_Pop", "final_gen")
# Initialize a vector to store extinction ratios for each frequency
extinction_ratios <- numeric(length(frequencies))
# Calculate extinction ratios for each frequency
for (t_pause in frequencies) {
# Filter data for the current frequency
current_data <- subset(data_table_Pop, f == t_pause)
# Count how many populations went extinct (Final Pop == 0)
extinct_count <- sum(current_data$Final_Pop == 0)
# Calculate the extinction ratio (Number of extinct populations / number of replicates)
extinction_ratios[t_pause] <- extinct_count / no_replicates
}
# Create a data frame for extinction ratios
extinction_df <- data.frame(
t_pause = frequencies,
extinction_ratio = extinction_ratios
)
# Print or view the extinction ratios
print(extinction_df)
plot(extinction_df[,1], extinction_df[,2],
type = "b",
pch = 16,
col = "#CC79A7",
ylab = "Extinction Probability",
xlab = "Pause between Events",
main = "Extinction rate depending on frequency")
legend("topright", legend = "Total Population",
col = "#CC79A7",
pch = 16)
# enabling plots to be in the same window
par(mfrow = c(1,2))
#data_table_Pop
# Ensure data_table_Pop is a data frame
data_table_Nw <- as.data.frame(data_table_Nw)
# Set column names (if not already set)
colnames(data_table_Nw) <- c("f", "Final_Pop", "final_gen")
# Initialize a vector to store extinction ratios for each frequency
extinction_ratios_WT <- numeric(length(frequencies))
# Calculate extinction ratios for each frequency
for (t_pause in frequencies) {
# Filter data for the current frequency
current_data_WT <- subset(data_table_Nw, f == t_pause)
# Count how many populations went extinct (Final Pop == 0)
extinct_count_WT <- sum(current_data_WT$Final_Pop == 0)
# Calculate the extinction ratio (extinct_count / no_replicates)
extinction_ratios_WT[t_pause] <- extinct_count_WT / no_replicates
}
# Create a data frame for extinction ratios
extinction_WT_df <- data.frame(
t_pause = frequencies,
extinction_ratio_WT = extinction_ratios_WT
)
# Print or view the extinction ratios
print(extinction_WT_df)
plot(extinction_WT_df[,1], extinction_WT_df[,2],
type = "b",
pch = 16,
col = "#D55E00",
ylab = "Extinction Probability WT",
xlab = "Pause between Events",
main = c(paste("WT-Extinction probability"), paste("depending on frequency")))
#data_table_Pop
# Ensure data_table_Pop is a data frame
data_table_Nm <- as.data.frame(data_table_Nm)
# Set column names (if not already set)
colnames(data_table_Nm) <- c("f", "Final_Pop", "final_gen")
# Initialize a vector to store extinction ratios for each frequency
extinction_ratios_MUT <- numeric(length(frequencies))
# Calculate extinction ratios for each frequency
for (t_pause in frequencies) {
# Filter data for the current frequency
current_data_MUT <- subset(data_table_Nm, f == t_pause)
# Count how many populations went extinct (Final Pop == 0)
extinct_count_MUT <- sum(current_data_MUT$Final_Pop == 0)
# Calculate the extinction ratio (extinct_count / no_replicates)
extinction_ratios_MUT[t_pause] <- extinct_count_MUT / no_replicates
}
# Create a data frame for extinction ratios
extinction_MUT_df <- data.frame(
t_pause = frequencies,
extinction_ratio_MUT = extinction_ratios_MUT
)
# Print or view the extinction ratios
print(extinction_MUT_df)
plot(extinction_MUT_df[,1], extinction_MUT_df[,2],
type = "b",
pch = 16,
col = "#56B4E9",
ylab = "Extinction Probability MUT",
xlab = "Pause between Events",
main = c(paste("Mut-Extinction probability"), paste("depending on frequency")))
# resetting window
par(mfrow= c(1,1))
# enabling plots to be in the same window
par(mfrow = c(1,2))
#data_table_Pop
# Ensure data_table_Pop is a data frame
data_table_Nw <- as.data.frame(data_table_Nw)
# Set column names (if not already set)
colnames(data_table_Nw) <- c("f", "Final_Pop", "final_gen")
# Initialize a vector to store extinction ratios for each frequency
extinction_ratios_WT <- numeric(length(frequencies))
# Calculate extinction ratios for each frequency
for (t_pause in frequencies) {
# Filter data for the current frequency
current_data_WT <- subset(data_table_Nw, f == t_pause)
# Count how many populations went extinct (Final Pop == 0)
extinct_count_WT <- sum(current_data_WT$Final_Pop == 0)
# Calculate the extinction ratio (extinct_count / no_replicates)
extinction_ratios_WT[t_pause] <- extinct_count_WT / no_replicates
}
# Create a data frame for extinction ratios
extinction_WT_df <- data.frame(
t_pause = frequencies,
extinction_ratio_WT = extinction_ratios_WT
)
# Print and view the extinction ratios
print(extinction_WT_df)
plot(extinction_WT_df[,1], extinction_WT_df[,2],
type = "b",
pch = 16,
col = "#D55E00",
ylab = "Extinction Probability WT",
xlab = "Pause between Events",
main = c(paste("WT-Extinction probability"), paste("depending on frequency")))
legend("topright", legend = "Wildtype",
col = "#D55E00",
pch = 16)
#data_table_Pop
# Ensure data_table_Pop is a data frame
data_table_Nm <- as.data.frame(data_table_Nm)
# Set column names (if not already set)
colnames(data_table_Nm) <- c("f", "Final_Pop", "final_gen")
# Initialize a vector to store extinction ratios for each frequency
extinction_ratios_MUT <- numeric(length(frequencies))
# Calculate extinction ratios for each frequency
for (t_pause in frequencies) {
# Filter data for the current frequency
current_data_MUT <- subset(data_table_Nm, f == t_pause)
# Count how many populations went extinct (Final Pop == 0)
extinct_count_MUT <- sum(current_data_MUT$Final_Pop == 0)
# Calculate the extinction ratio (extinct_count / no_replicates)
extinction_ratios_MUT[t_pause] <- extinct_count_MUT / no_replicates
}
# Create a data frame for extinction ratios
extinction_MUT_df <- data.frame(
t_pause = frequencies,
extinction_ratio_MUT = extinction_ratios_MUT
)
# Print and view the extinction ratios
print(extinction_MUT_df)
plot(extinction_MUT_df[,1], extinction_MUT_df[,2],
type = "b",
pch = 16,
col = "#56B4E9",
ylab = "Extinction Probability MUT",
xlab = "Pause between Events",
main = c(paste("Mut-Extinction probability"), paste("depending on frequency")))
legend("topright", legend = "Wildtype",
col = "#56B4E9",
pch = 16)
# resetting window
par(mfrow= c(1,1))
# enabling plots to be in the same window
par(mfrow = c(1,2))
#data_table_Pop
# Ensure data_table_Pop is a data frame
data_table_Nw <- as.data.frame(data_table_Nw)
# Set column names (if not already set)
colnames(data_table_Nw) <- c("f", "Final_Pop", "final_gen")
# Initialize a vector to store extinction ratios for each frequency
extinction_ratios_WT <- numeric(length(frequencies))
# Calculate extinction ratios for each frequency
for (t_pause in frequencies) {
# Filter data for the current frequency
current_data_WT <- subset(data_table_Nw, f == t_pause)
# Count how many populations went extinct (Final Pop == 0)
extinct_count_WT <- sum(current_data_WT$Final_Pop == 0)
# Calculate the extinction ratio (extinct_count / no_replicates)
extinction_ratios_WT[t_pause] <- extinct_count_WT / no_replicates
}
# Create a data frame for extinction ratios
extinction_WT_df <- data.frame(
t_pause = frequencies,
extinction_ratio_WT = extinction_ratios_WT
)
# Print and view the extinction ratios
print(extinction_WT_df)
plot(extinction_WT_df[,1], extinction_WT_df[,2],
type = "b",
pch = 16,
col = "#D55E00",
ylab = "Extinction Probability WT",
xlab = "Pause between Events",
main = c(paste("WT-Extinction probability"), paste("depending on frequency")))
legend("topright", legend = "Wildtype",
col = "#D55E00",
pch = 16)
#data_table_Pop
# Ensure data_table_Pop is a data frame
data_table_Nm <- as.data.frame(data_table_Nm)
# Set column names (if not already set)
colnames(data_table_Nm) <- c("f", "Final_Pop", "final_gen")
# Initialize a vector to store extinction ratios for each frequency
extinction_ratios_MUT <- numeric(length(frequencies))
# Calculate extinction ratios for each frequency
for (t_pause in frequencies) {
# Filter data for the current frequency
current_data_MUT <- subset(data_table_Nm, f == t_pause)
# Count how many populations went extinct (Final Pop == 0)
extinct_count_MUT <- sum(current_data_MUT$Final_Pop == 0)
# Calculate the extinction ratio (extinct_count / no_replicates)
extinction_ratios_MUT[t_pause] <- extinct_count_MUT / no_replicates
}
# Create a data frame for extinction ratios
extinction_MUT_df <- data.frame(
t_pause = frequencies,
extinction_ratio_MUT = extinction_ratios_MUT
)
# Print and view the extinction ratios
print(extinction_MUT_df)
plot(extinction_MUT_df[,1], extinction_MUT_df[,2],
type = "b",
pch = 16,
col = "#56B4E9",
ylab = "Extinction Probability MUT",
xlab = "Pause between Events",
main = c(paste("Mut-Extinction probability"), paste("depending on frequency")))
legend("topright", legend = "Mutant",
col = "#56B4E9",
pch = 16)
# resetting window
par(mfrow= c(1,1))
ggplot(data_table_Pop, aes(x = as.factor(f), y = final_gen)) +
geom_boxplot(fill = "#E69F00") +
labs(x = "Pause between Events", y = "Final Generation Count",
title = "Distribution of Final Generations by Pause between Events") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))  # Center the title
ggplot(data_table_Pop, aes(x = final_gen, fill = as.factor(f))) +
geom_histogram(binwidth = 10, position = "identity", alpha = 0.6) +
labs(x = "Final Generation Count", y = "Count",
title = "Histogram of Final Generations by Pause between Events") +
theme_minimal() +
scale_fill_discrete(name = "Pause btw. Events") +
theme(plot.title = element_text(hjust = 0.5))  # Center the title
# Filter for populations that went extinct (Final_Pop == 0)
extinct_pop <- subset(data_table_Pop, Final_Pop == 0)
# Select only the frequency and generation of extinction
extinct_data <- extinct_pop[, c("f", "final_gen")]
# Optionally, rename columns for clarity
colnames(extinct_data) <- c("Frequency", "Extinction_Generation")
# View or print the resulting data
print(extinct_data)
#Plot the data
library(ggplot2)
# Example dataframe for context (replace with your actual data)
# extinct_data <- data.frame(Frequency = sample(1:10, 100, replace = TRUE),
#                             Extinction_Generation = sample(1:10, 100, replace = TRUE))
# Creating the plot with a legend
ggplot(extinct_data, aes(x = Frequency, y = Extinction_Generation)) +
geom_point(aes(color = "Generation of Extinction"), pch = 16, size = 2) +  # Update legend label here
geom_smooth(aes(color = "Mean Gen. of Extinction"), method = lm, se = FALSE) +  # Update legend label here
labs(title = "Generation of Extinction across different Frequencies",
x = "Pause between Events",
y = "Extinction Generation") +
theme_bw() +
scale_color_manual(name = NULL, values = c("Generation of Extinction" = "#009E73",
"Mean Gen. of Extinction" = "#E69F00")) +  # Match the labels
theme(
legend.position = c(.95, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6)
) +
theme(plot.title = element_text(hjust = 0.5)) +  # Center the title
scale_x_continuous(breaks = 1:10, limits = c(1, 10))  # Set x-axis to show only natural numbers 1 through 10
# Filter for populations that went extinct (Final_Pop == 0)
extinct_pop <- subset(data_table_Pop, Final_Pop == 0)
# Select only the frequency and generation of extinction
extinct_data <- extinct_pop[, c("f", "final_gen")]
# Optionally, rename columns for clarity
colnames(extinct_data) <- c("Frequency", "Extinction_Generation")
# View or print the resulting data
print(extinct_data)
#Plot the data
library(ggplot2)
# Example dataframe for context (replace with your actual data)
# extinct_data <- data.frame(Frequency = sample(1:10, 100, replace = TRUE),
#                             Extinction_Generation = sample(1:10, 100, replace = TRUE))
# Creating the plot with a legend
ggplot(extinct_data, aes(x = Frequency, y = Extinction_Generation)) +
geom_point(aes(color = "Generation of Extinction"), pch = 16, size = 2) +  # Update legend label here
geom_smooth(aes(color = "Mean Gen. of Extinction"), method = lm, se = FALSE) +  # Update legend label here
labs(title = "Generation of Extinction across different Frequencies",
x = "Pause between Events",
y = "Extinction Generation") +
theme_bw() +
scale_color_manual(name = NULL, values = c("Generation of Extinction" = "#009E73",
"Mean Gen. of Extinction" = "#E69F00")) +  # Match the labels
theme(
legend.position.inside = c(.95, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6)
) +
theme(plot.title = element_text(hjust = 0.5)) +  # Center the title
scale_x_continuous(breaks = 1:10, limits = c(1, 10))  # Set x-axis to show only natural numbers 1 through 10
library(ggplot2)
# Set parameters for the event pattern
total_time <- 60                # Total time on the x-axis
pause_duration <- 6             # Time between events
event_duration <- 3             # Duration of each event
event_strength <- 10            # Height of the event on y-axis
# Generate time points and initialize event strengths
time_points <- seq(0, total_time, by = 1)
event_strengths <- rep(0, length(time_points))  # Start with zeroes
# Loop to create events based on pause and duration
for (t in seq(0, total_time, by = pause_duration + event_duration)) {
start_idx <- which(time_points == t)
end_idx <- which(time_points == (t + event_duration))
if (length(start_idx) > 0 && length(end_idx) > 0) {
event_strengths[start_idx:(end_idx - 1)] <- event_strength
}
}
# Create a data frame for plotting
event_data <- data.frame(Time = time_points, Strength = event_strengths)
# Plot the event curve using geom_step for sharp transitions
ggplot(event_data, aes(x = Time, y = Strength)) +
geom_step(direction = "hv", color = "darkblue", size = 1) +
labs(title = "Intermediate Frequency of Flooding",
x = "Time",
y = "Strength of Flood") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Filter for populations that went extinct (Final_Pop == 0)
extinct_pop <- subset(data_table_Pop, Final_Pop == 0)
# Select only the frequency and generation of extinction
extinct_data <- extinct_pop[, c("f", "final_gen")]
# Optionally, rename columns for clarity
colnames(extinct_data) <- c("Frequency", "Extinction_Generation")
# View or print the resulting data
print(extinct_data)
#Plot the data
library(ggplot2)
# Example dataframe for context (replace with your actual data)
# extinct_data <- data.frame(Frequency = sample(1:10, 100, replace = TRUE),
#                             Extinction_Generation = sample(1:10, 100, replace = TRUE))
# Creating the plot with a legend
ggplot(extinct_data, aes(x = Frequency, y = Extinction_Generation)) +
geom_point(aes(color = "Generation of Extinction"), pch = 16, size = 2) +  # Update legend label here
geom_smooth(aes(color = "Mean Gen. of Extinction"), method = lm, se = FALSE) +  # Update legend label here
labs(title = "Generation of Extinction across different Frequencies",
x = "Pause between Events",
y = "Extinction Generation") +
theme_bw() +
scale_color_manual(name = NULL, values = c("Generation of Extinction" = "#009E73",
"Mean Gen. of Extinction" = "#E69F00")) +  # Match the labels
theme(
legend.position.inside = c(.95, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6)
) +
theme(plot.title = element_text(hjust = 0.5)) +  # Center the title
scale_x_continuous(breaks = 1:10, limits = c(1, 10))  # Set x-axis to show only natural numbers 1 through 10
summary(extinct_data)
summary(extinct_data)[,2]
summary(extinct_data)
# Filter for populations that went extinct (Final_Pop == 0)
extinct_pop <- subset(data_table_Pop, Final_Pop == 0)
# Select only the frequency and generation of extinction
extinct_data <- extinct_pop[, c("f", "final_gen")]
# Optionally, rename columns for clarity
colnames(extinct_data) <- c("Frequency", "Extinction_Generation")
# View or print the resulting data
print(tail(extinct_data))
summary(extinct_data)
#Plot the data
library(ggplot2)
# Example dataframe for context (replace with your actual data)
# extinct_data <- data.frame(Frequency = sample(1:10, 100, replace = TRUE),
#                             Extinction_Generation = sample(1:10, 100, replace = TRUE))
# Creating the plot with a legend
ggplot(extinct_data, aes(x = Frequency, y = Extinction_Generation)) +
geom_point(aes(color = "Generation of Extinction"), pch = 16, size = 2) +  # Update legend label here
geom_smooth(aes(color = "Mean Gen. of Extinction"), method = lm, se = FALSE) +  # Update legend label here
labs(title = "Generation of Extinction across different Frequencies",
x = "Pause between Events",
y = "Extinction Generation") +
theme_bw() +
scale_color_manual(name = NULL, values = c("Generation of Extinction" = "#009E73",
"Mean Gen. of Extinction" = "#E69F00")) +  # Match the labels
theme(
legend.position.inside = c(.95, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6)
) +
theme(plot.title = element_text(hjust = 0.5)) +  # Center the title
scale_x_continuous(breaks = 1:10, limits = c(1, 10))  # Set x-axis to show only natural numbers 1 through 10
